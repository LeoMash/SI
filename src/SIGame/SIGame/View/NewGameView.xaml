<UserControl x:Class="SIGame.NewGameView"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:l="clr-namespace:SIGame"
    xmlns:lvm="clr-namespace:SIGame.ViewModel;assembly=SIGame.ViewModel"
    xmlns:lb="clr-namespace:SIGame.Behaviors"
    xmlns:lc="clr-namespace:SIGame.Converters"
    xmlns:lp="clr-namespace:SIGame.Properties"
    xmlns:ps="clr-namespace:SIGame.ViewModel.PackageSources;assembly=SIGame.ViewModel"
    xmlns:sc="clr-namespace:SICore;assembly=SICore"
    xmlns:sys="clr-namespace:System;assembly=mscorlib"
    xmlns:data="clr-namespace:SIData;assembly=SIData"
    FontFamily="pack://application:,,,/SIGame;component/Fonts/#Phenomena"
    mc:Ignorable="d">
    <UserControl.Resources>
        <lc:PlusOneConverter x:Key="PlusOneConverter"/>
        <ObjectDataProvider x:Key="dataFromEnum" MethodName="GetValues" ObjectType="{x:Type sys:Enum}">
            <ObjectDataProvider.MethodParameters>
                <x:Type TypeName="data:GameRole"/>
            </ObjectDataProvider.MethodParameters>
        </ObjectDataProvider>

        <ObjectDataProvider x:Key="accountTypes" MethodName="GetValues" ObjectType="{x:Type sys:Enum}">
            <ObjectDataProvider.MethodParameters>
                <x:Type TypeName="lvm:AccountTypes" />
            </ObjectDataProvider.MethodParameters>
        </ObjectDataProvider>

        <lc:IsPlayerConverter x:Key="IsPlayer" />
        <lc:EnumConverter x:Key="GameRoleConverter1" EnumType="{x:Type data:GameRole}" />
        <lc:EnumConverter x:Key="AccountTypes" EnumType="{x:Type lvm:AccountTypes}" />
        <lc:EnumConverter x:Key="NetworkGameTypes" EnumType="{x:Type lvm:NetworkGameType}" />
        <lc:PlayerIndiciesConverter x:Key="PlayerIndiciesConverter" />

        <lc:IsRoleConverter x:Key="IsShowman" Role="Showman" />

        <lc:AccountTypeToBooleanConverter x:Key="AccountTypeToBooleanConverter" />

        <Style x:Key="Header" TargetType="TextBlock">
            <Setter Property="HorizontalAlignment" Value="Left" />
            <Setter Property="VerticalAlignment" Value="Center" />
            <Setter Property="Margin" Value="4,5,5,5" />
            <Setter Property="FontSize" Value="19" />
            <Setter Property="Foreground" Value="Black" />
        </Style>

        <Style x:Key="{x:Type TextBox}" TargetType="{x:Type TextBox}">
            <Setter Property="Padding" Value="0,2" />
        </Style>

        <Style x:Key="DirectConnectOnly" TargetType="{x:Type FrameworkElement}">
            <Setter Property="Visibility" Value="Collapsed" />
            <Style.Triggers>
                <DataTrigger Binding="{Binding NetworkGameType}" Value="{x:Static lvm:NetworkGameType.DirectConnection}">
                    <Setter Property="Visibility" Value="Visible" />
                </DataTrigger>
                <DataTrigger Binding="{Binding NetworkGame}" Value="False">
                    <Setter Property="Visibility" Value="Collapsed" />
                </DataTrigger>
            </Style.Triggers>
        </Style>

        <Style x:Key="GameServerOnly" TargetType="{x:Type Control}">
            <Setter Property="Visibility" Value="Visible" />
            <Setter Property="Background" Value="Transparent" />
            <Style.Triggers>
                <DataTrigger Binding="{Binding NetworkGameType}" Value="{x:Static lvm:NetworkGameType.DirectConnection}">
                    <Setter Property="Visibility" Value="Collapsed" />
                </DataTrigger>
                <DataTrigger Binding="{Binding NetworkGame}" Value="False">
                    <Setter Property="Visibility" Value="Collapsed" />
                </DataTrigger>
            </Style.Triggers>
        </Style>

        <Style x:Key="GameServerOnlyGrid" TargetType="{x:Type Grid}">
            <Setter Property="Visibility" Value="Visible" />
            <Setter Property="Background" Value="Transparent" />
            <Style.Triggers>
                <DataTrigger Binding="{Binding NetworkGameType}" Value="{x:Static lvm:NetworkGameType.DirectConnection}">
                    <Setter Property="Visibility" Value="Collapsed" />
                </DataTrigger>
                <DataTrigger Binding="{Binding NetworkGame}" Value="False">
                    <Setter Property="Visibility" Value="Collapsed" />
                </DataTrigger>
            </Style.Triggers>
        </Style>

        <Style x:Key="DirectConnectOnlyHeader" TargetType="{x:Type TextBlock}" BasedOn="{StaticResource Header}">
            <Setter Property="Visibility" Value="Collapsed" />
            <Style.Triggers>
                <DataTrigger Binding="{Binding NetworkGameType}" Value="{x:Static lvm:NetworkGameType.DirectConnection}">
                    <Setter Property="Visibility" Value="Visible" />
                </DataTrigger>
                <DataTrigger Binding="{Binding NetworkGame}" Value="False">
                    <Setter Property="Visibility" Value="Collapsed" />
                </DataTrigger>
            </Style.Triggers>
        </Style>

        <Style x:Key="GameServerOnlyHeader" TargetType="{x:Type TextBlock}" BasedOn="{StaticResource Header}">
            <Setter Property="Visibility" Value="Visible" />
            <Style.Triggers>
                <DataTrigger Binding="{Binding NetworkGameType}" Value="{x:Static lvm:NetworkGameType.DirectConnection}">
                    <Setter Property="Visibility" Value="Collapsed" />
                </DataTrigger>
                <DataTrigger Binding="{Binding NetworkGame}" Value="False">
                    <Setter Property="Visibility" Value="Collapsed" />
                </DataTrigger>
            </Style.Triggers>
        </Style>

        <ControlTemplate x:Key="TBTemplate" TargetType="{x:Type ButtonBase}">
            <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="True">
                <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
            </Border>
            <ControlTemplate.Triggers>
                <Trigger Property="Button.IsDefaulted" Value="True">
                    <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                </Trigger>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" TargetName="border" Value="#FFBEE6FD"/>
                    <Setter Property="BorderBrush" TargetName="border" Value="#FF3C7FB1"/>
                </Trigger>
                <Trigger Property="IsPressed" Value="True">
                    <Setter Property="Background" TargetName="border" Value="#FFC4E5F6"/>
                    <Setter Property="BorderBrush" TargetName="border" Value="#FF2C628B"/>
                </Trigger>
                <Trigger Property="IsEnabled" Value="False">
                    <Setter Property="Background" TargetName="border" Value="#FFF4F4F4"/>
                    <Setter Property="BorderBrush" TargetName="border" Value="#FFADB2B5"/>
                    <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="#FF838383"/>
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>

        <lc:StrengthConverter x:Key="StrengthConverter" />

        <DataTemplate DataType="{x:Type lvm:HumanAccount}">
            <StackPanel Orientation="Horizontal">
                <Image Source="{Binding Picture, Converter={StaticResource ImageConverter}}" Stretch="Uniform" Width="100" Height="75" />
                <TextBlock Text="{Binding Name}" VerticalAlignment="Center" Margin="4,0,0,0" />
            </StackPanel>
        </DataTemplate>

        <Style x:Key="ToolTippedElement" TargetType="{x:Type FrameworkElement}">
            <Setter Property="ToolTip">
                <Setter.Value>
                    <ToolTip Content="{Binding Path=., Converter={StaticResource StrengthConverter}}" />
                </Setter.Value>
            </Setter>
        </Style>

        <DataTemplate DataType="{x:Type data:ComputerAccount}">
            <DockPanel Style="{StaticResource ToolTippedElement}" Background="Transparent">
                <Image DockPanel.Dock="Left" Source="{Binding Picture, Converter={StaticResource ImageConverter}}" Stretch="Uniform"
                       Width="50" Height="75" />
                <Button DockPanel.Dock="Right" Margin="10,0,0,0" Height="20" Width="20" ToolTip="{x:Static lp:Resources.Person_Delete}"
                        Visibility="{Binding Path=CanBeDeleted, Converter={StaticResource BooleanToVisibilityConverter1}}"
                        Command="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=UserControl, AncestorLevel=1}, Path=DataContext.RemoveComputerAccount}" CommandParameter="{Binding}" Template="{StaticResource DeleteButtonTemplate}" />
                <Button DockPanel.Dock="Right" Margin="10,0,0,0" Height="20" Width="20" ToolTip="{x:Static lp:Resources.Person_Change}"
                        Visibility="{Binding Path=CanBeDeleted, Converter={StaticResource BooleanToVisibilityConverter1}}"
                        Command="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=UserControl, AncestorLevel=1}, Path=DataContext.EditComputerAccount}" CommandParameter="{Binding}" Template="{StaticResource EditButtonTemplate}" />
                <TextBlock Text="{Binding Name}" VerticalAlignment="Center" FontSize="15" FontWeight="Medium" Margin="11,0" Width="100" TextWrapping="Wrap" />
            </DockPanel>
        </DataTemplate>

        <DataTemplate x:Key="ShowmanTemplate">
            <DockPanel Background="Transparent">
                <Image DockPanel.Dock="Left" Source="{Binding Picture, Converter={StaticResource ImageConverter}}" Stretch="Uniform" Width="50" Height="75" />
                <Button DockPanel.Dock="Right" Margin="10,0,0,0" Height="20" Width="20" ToolTip="{x:Static lp:Resources.Person_Delete}"
                        Visibility="{Binding Path=CanBeDeleted, Converter={StaticResource BooleanToVisibilityConverter1}}" Command="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=UserControl, AncestorLevel=1}, Path=DataContext.RemoveShowmanAccount}" CommandParameter="{Binding}" Template="{StaticResource DeleteButtonTemplate}" />
                <TextBlock Text="{Binding Name}" VerticalAlignment="Center" FontSize="15" FontWeight="Medium" Margin="11,0" Width="100" TextWrapping="Wrap" />
            </DockPanel>
        </DataTemplate>

        <DataTemplate x:Key="AccountTypeTemplate">
            <TextBlock Text="{Binding Converter={StaticResource AccountTypes}}" />
        </DataTemplate>

        <Style x:Key="ButtonBase" TargetType="ToggleButton" BasedOn="{StaticResource SIButton}">
            <Setter Property="Padding" Value="10,6" />
            <Setter Property="Margin" Value="0,1" />
            <Setter Property="FontSize" Value="20" />
        </Style>

        <Style x:Key="showmanCBStyle" TargetType="{x:Type ToggleButton}" BasedOn="{StaticResource ButtonBase}">
            <Style.Triggers>
                <DataTrigger Binding="{Binding Role,Converter={StaticResource IsShowman}}" Value="True">
                    <Setter Property="Visibility" Value="Hidden" />
                </DataTrigger>
                <DataTrigger Binding="{Binding NetworkGame}" Value="False">
                    <Setter Property="Visibility" Value="Collapsed" />
                </DataTrigger>
            </Style.Triggers>
        </Style>

        <Style x:Key="playerCBStyle" TargetType="{x:Type ToggleButton}" BasedOn="{StaticResource ButtonBase}">
            <Style.Triggers>
                <DataTrigger Binding="{Binding IsCreator}" Value="True">
                    <Setter Property="Visibility" Value="Hidden" />
                </DataTrigger>
                <DataTrigger Binding="{Binding GameSettings.NetworkGame}" Value="False">
                    <Setter Property="Visibility" Value="Collapsed" />
                </DataTrigger>
            </Style.Triggers>
        </Style>

        <Style x:Key="AccountBoxStyle" TargetType="{x:Type ComboBox}" BasedOn="{StaticResource ComboBoxStyle}">
            <Setter Property="ItemsSource" Value="{Binding SelectionList, Mode=OneWay}" />
            <Setter Property="SelectedItem" Value="{Binding SelectedAccount}" />
            <Setter Property="IsSynchronizedWithCurrentItem" Value="False" />
            <Setter Property="MaxDropDownHeight" Value="450" />
            <Setter Property="FontSize" Value="15" />
            <Setter Property="Background" Value="White" />
            <Style.Triggers>
                <DataTrigger Binding="{Binding SelectionList.Count}" Value="1">
                    <Setter Property="IsEnabled" Value="false" />
                </DataTrigger>
            </Style.Triggers>
        </Style>
    </UserControl.Resources>
    <Grid Background="#FF71A2E2">
        <Grid IsEnabled="{Binding Content, Converter={StaticResource NullToBooleanConverter1}, ConverterParameter={x:Null}}"
              Margin="64,27,64,5">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
                <RowDefinition Height="*" />
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="*" />
            </Grid.ColumnDefinitions>
            <TextBlock Style="{StaticResource GameServerOnlyHeader}" VerticalAlignment="Center" FontWeight="Medium" Text="{x:Static lp:Resources.GameName}" />
            <TextBox Style="{StaticResource GameServerOnly}" Background="White" FontWeight="Medium" Grid.Column="1" Text="{Binding NetworkGameName, UpdateSourceTrigger=PropertyChanged}" MaxLength="50" VerticalAlignment="Center" Margin="5" Padding="1" />
            <TextBlock Style="{StaticResource GameServerOnlyHeader}" Grid.Row="1" VerticalAlignment="Center" FontWeight="Medium" Text="{x:Static lp:Resources.Password}" />
            <Grid Style="{StaticResource GameServerOnlyGrid}" Grid.Row="1" Grid.Column="1">
                <TextBox Text="{Binding NetworkGamePassword}" Style="{StaticResource GameServerOnly}"
                     MaxLength="15" VerticalAlignment="Center" Margin="5" Padding="1" Background="White" FontWeight="Medium"
                     Visibility="{Binding ElementName=showPassword,Path=IsChecked,Converter={StaticResource BooleanToVisibilityConverter1}}" />
                <PasswordBox Style="{StaticResource GameServerOnly}"
                         Visibility="{Binding ElementName=showPassword,Path=IsChecked,Converter={StaticResource BooleanToCollapsedConverter}}"
                         lb:PasswordHelper.IsAttached="True" Background="White" FontWeight="Medium"
                         lb:PasswordHelper.Password="{Binding NetworkGamePassword, Mode=TwoWay}"
                         MaxLength="15" VerticalAlignment="Center" Margin="5" Padding="1" />
                <ToggleButton Name="showPassword" Style="{StaticResource SIButtonSimple}" BorderThickness="0"
                          Width="20" Height="20" HorizontalAlignment="Right" Margin="0,0,8,0" Foreground="Black" FontSize="10">👁</ToggleButton>
            </Grid>
            <TextBlock Style="{StaticResource DirectConnectOnlyHeader}" Text="{x:Static lp:Resources.PortNumber}" FontWeight="Medium" />
            <StackPanel Style="{StaticResource DirectConnectOnly}" Grid.Column="1" Grid.ColumnSpan="2" TextBlock.Foreground="Black">
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition Width="*" />
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition Width="*" />
                    </Grid.ColumnDefinitions>
                    <TextBlock Text="{x:Static lp:Resources.MainPort}" VerticalAlignment="Center" Margin="5,0" />
                    <l:NumericTextBox Grid.Column="1" Minimum="0" Maximum="100000" Text="{Binding NetworkPort,Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Style="{StaticResource {x:Type TextBox}}" Margin="10,5" Padding="1" />
                    <TextBlock Grid.Column="2" Text="{x:Static lp:Resources.MultimediaPort}" VerticalAlignment="Center" Margin="5,0" />
                    <l:NumericTextBox Grid.Column="3" Minimum="0" Maximum="100000" Text="{Binding Model.AppSettings.MultimediaPort,Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Style="{StaticResource {x:Type TextBox}}" Margin="10,5" Padding="1" />
                </Grid>
            </StackPanel>
            <TextBlock Style="{StaticResource DirectConnectOnly}" Grid.Row="1" Grid.ColumnSpan="4" Foreground="Black" Margin="5,0,5,5" TextWrapping="Wrap" Text="{x:Static lp:Resources.NetworkGameHint}" />
            <TextBlock Text="{x:Static lp:Resources.QuestionPack}" Style="{StaticResource Header}" Grid.Row="2" FontWeight="Medium" />
            <StackPanel Grid.Row="3" Grid.ColumnSpan="2" Margin="0,15,0,0">
                <StackPanel Orientation="Horizontal">
                    <Menu Height="30" Margin="0,5,0,0" HorizontalAlignment="Left">
                        <Menu.Style>
                            <Style TargetType="Menu">
                                <Setter Property="Background" Value="White" />
                                <Setter Property="Cursor" Value="Hand" />
                                <Style.Triggers>
                                    <Trigger Property="IsMouseOver" Value="True">
                                        <Setter Property="Background" Value="LightGray" />
                                    </Trigger>
                                </Style.Triggers>
                            </Style>
                        </Menu.Style>
                        <MenuItem Height="30" Background="Transparent" BorderThickness="0">
                            <MenuItem.Style>
                                <Style TargetType="MenuItem">
                                    <Setter Property="Header" Value="{Binding Package}" />
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding Package}" Value="{x:Null}">
                                            <Setter Property="Header" Value="{x:Static lp:Resources.NotSet}" />
                                            <Setter Property="Foreground" Value="Red" />
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </MenuItem.Style>
                            <MenuItem.HeaderTemplate>
                                <DataTemplate>
                                    <StackPanel Orientation="Horizontal">
                                        <TextBlock Text="{Binding}" HorizontalAlignment="Stretch" TextAlignment="Center" FontWeight="Medium" FontSize="19" />
                                        <Path Data="M0,0L4,4L8,0" Stroke="Black" StrokeThickness="2" VerticalAlignment="Center" Margin="5,3,0,0" />
                                    </StackPanel>
                                </DataTemplate>
                            </MenuItem.HeaderTemplate>
                            <MenuItem.Resources>
                                <Style TargetType="MenuItem">
                                    <Setter Property="VerticalContentAlignment" Value="Center" />
                                    <Setter Property="Cursor" Value="Hand" />
                                </Style>
                            </MenuItem.Resources>
                            <MenuItem Header="{x:Static lp:Resources.Next}" Command="{Binding SelectPackage}" CommandParameter="{x:Static ps:PackageSourceTypes.Next}" />
                            <MenuItem Header="{x:Static lp:Resources.RandomThemes}" Command="{Binding SelectPackage}" CommandParameter="{x:Static ps:PackageSourceTypes.Random}" />
                            <MenuItem Header="{x:Static lp:Resources.RandomServer}" Command="{Binding SelectPackage}" CommandParameter="{x:Static ps:PackageSourceTypes.RandomServer}" />
                            <MenuItem Header="{x:Static lp:Resources.File}" Command="{Binding SelectPackage}" CommandParameter="{x:Static ps:PackageSourceTypes.Local}" />
                            <MenuItem Header="{x:Static lp:Resources.QuestionLibrary}" Command="{Binding SelectPackage}" CommandParameter="{x:Static ps:PackageSourceTypes.SIStorage}" />
                            <Separator />
                            <MenuItem Header="{x:Static lp:Resources.UserPackages}" Command="{Binding SelectPackage}" CommandParameter="{x:Static ps:PackageSourceTypes.VK}" />
                        </MenuItem>
                    </Menu>
                </StackPanel>
            </StackPanel>
            <StackPanel Grid.Row="4" Grid.ColumnSpan="3" Orientation="Horizontal" Margin="0,15,0,0">
                <TextBlock Text="{x:Static lp:Resources.Role}" Style="{StaticResource Header}" FontWeight="Medium" />
                <StackPanel Orientation="Horizontal" VerticalAlignment="Center" Margin="5">
                    <ComboBox FontWeight="Light" FontSize="19" Background="White"
                              Style="{StaticResource ComboBoxStyle}"
                              ItemsSource="{Binding Source={StaticResource dataFromEnum}, Mode=OneWay}"
                              SelectedItem="{Binding Role}">
                        <ComboBox.ItemTemplate>
                            <DataTemplate>
                                <TextBlock Text="{Binding Converter={StaticResource GameRoleConverter1}}" FontWeight="Medium" />
                            </DataTemplate>
                        </ComboBox.ItemTemplate>
                    </ComboBox>
                </StackPanel>
            </StackPanel>
            <TextBlock Grid.Row="5" Style="{StaticResource Header}" Text="{x:Static lp:Resources.Showman}" FontWeight="Medium" />
            <StackPanel Grid.Row="6" HorizontalAlignment="Stretch">
                <ToggleButton Style="{StaticResource showmanCBStyle}" TextBlock.FontWeight="Medium" IsChecked="{Binding Showman.AccountType, Converter={StaticResource AccountTypeToBooleanConverter}}" Content="{Binding Showman.AccountType, Converter={StaticResource AccountTypes}}" />
                <ComboBox DataContext="{Binding Showman}" Style="{StaticResource AccountBoxStyle}" ItemTemplate="{StaticResource ShowmanTemplate}" />
            </StackPanel>
            <Grid Grid.Row="6" Grid.Column="1">
                <StackPanel VerticalAlignment="Bottom">
                    <Slider Minimum="2" Maximum="{Binding Source={x:Static sc:Constants.MaxPlayers}}" Value="{Binding PlayersCount}"
                        VerticalAlignment="Center" Margin="10,0,0,0" Cursor="Hand" />
                    <TextBlock Style="{StaticResource Header}" HorizontalAlignment="Center" FontWeight="Medium">
                        <Run Text="{x:Static lp:Resources.Players}" /><Run Text=" (" /><Run Text="{Binding PlayersCount}" /><Run Text=")" />
                    </TextBlock>
                </StackPanel>
            </Grid>
            <ScrollViewer Grid.Row="7" Grid.ColumnSpan="4" Margin="0,19,0,0" VerticalScrollBarVisibility="Auto">
                <ItemsControl ItemsSource="{Binding Players}" VerticalAlignment="Top">
                    <ItemsControl.ItemsPanel>
                        <ItemsPanelTemplate>
                            <UniformGrid Columns="4" />
                        </ItemsPanelTemplate>
                    </ItemsControl.ItemsPanel>
                    <ItemsControl.ItemTemplate>
                        <DataTemplate>
                            <StackPanel Background="#FF71A2E2" Margin="2">
                                <ToggleButton Style="{StaticResource playerCBStyle}" TextBlock.FontWeight="Medium" IsChecked="{Binding AccountType, Converter={StaticResource AccountTypeToBooleanConverter}}" Content="{Binding AccountType, Converter={StaticResource AccountTypes}}" />
                                <ComboBox Style="{StaticResource AccountBoxStyle}">
                                    <ComboBox.ItemsPanel>
                                        <ItemsPanelTemplate>
                                            <UniformGrid Columns="4" VirtualizingStackPanel.IsVirtualizing="True" VirtualizingStackPanel.VirtualizationMode="Recycling" />
                                        </ItemsPanelTemplate>
                                    </ComboBox.ItemsPanel>
                                </ComboBox>
                            </StackPanel>
                        </DataTemplate>
                    </ItemsControl.ItemTemplate>
                </ItemsControl>
            </ScrollViewer>
            <Button
                Style="{StaticResource SIButton}"
                Padding="30,6"
                FontSize="19"
                FontWeight="Medium"
                Grid.Row="3"
                Grid.Column="3"
                Background="{StaticResource WindowBackground}"
                HorizontalAlignment="Stretch"
                VerticalAlignment="Top"
                Command="{Binding BeginGame}"
                Content="{x:Static lp:Resources.StartGame}" />
            <Button
                Grid.Row="6"
                Grid.Column="3"
                FontWeight="Medium"
                Style="{StaticResource SIButton}"
                Background="{StaticResource WindowBackground}"
                Command="{Binding DataContext.ShowSlideMenu, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Window}}"
                CommandParameter="RulesSettingsPage"
                Padding="30,6"
                FontSize="19"
                Margin="0"
                ToolTip="{x:Static lp:Resources.RulesHint}"
                VerticalAlignment="Bottom">
                <Button.ContentTemplate>
                    <DataTemplate>
                        <TextBlock
                            HorizontalAlignment="Center"
                            VerticalAlignment="Center"
                            Style="{StaticResource SIText}"
                            LineStackingStrategy="BlockLineHeight">
                            <Run Text="{x:Static lp:Resources.Rules}" /><Run Text="…" />
                        </TextBlock>
                    </DataTemplate>
                </Button.ContentTemplate>
            </Button>
            <Grid Grid.Row="4" Grid.RowSpan="2" Grid.Column="2" Grid.ColumnSpan="2">
                <ContentControl
                    HorizontalAlignment="Stretch"
                    VerticalAlignment="Center"
                    Visibility="{Binding IsProgress, Converter={StaticResource BooleanToVisibilityConverter1}}">
                    <TextBlock
                        Text="{Binding Message}"
                        Foreground="Black"
                        HorizontalAlignment="Right"
                        TextAlignment="Right"
                        TextWrapping="Wrap"
                        TextTrimming="CharacterEllipsis" />
                </ContentControl>
                <StackPanel Orientation="Horizontal" HorizontalAlignment="Stretch">
                    <TextBlock
                        Width="450"
                        Name="tbError"
                        Text="{Binding ErrorMessage}"
                        HorizontalAlignment="Right"
                        TextAlignment="Right"
                        VerticalAlignment="Center"
                        Foreground="#FFC10000"
                        TextWrapping="Wrap"
                        TextTrimming="CharacterEllipsis" />
                </StackPanel>
            </Grid>
        </Grid>
        <ContentControl DataContext="{Binding Content}" Content="{Binding Data}" Style="{StaticResource dialogStyle}" Tag="{Binding Title}">
            <ContentControl.Resources>
                <DataTemplate DataType="{x:Type lvm:ComputerAccountViewModel}">
                    <l:ComputerAccountView />
                </DataTemplate>
                <DataTemplate DataType="{x:Type lvm:ShowmanViewModel}">
                    <l:AccountView />
                </DataTemplate>
                <DataTemplate DataType="{x:Type lvm:SIStorageViewModel}">
                    <l:SIStorageView />
                </DataTemplate>
            </ContentControl.Resources>
        </ContentControl>
    </Grid>
</UserControl>
