//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан программой.
//     Исполняемая версия:4.0.30319.42000
//
//     Изменения в этом файле могут привести к неправильной работе и будут потеряны в случае
//     повторной генерации кода.
// </auto-generated>
//------------------------------------------------------------------------------

namespace SIGame.ViewModel.Properties {
    using System;
    
    
    /// <summary>
    ///   Класс ресурса со строгой типизацией для поиска локализованных строк и т.д.
    /// </summary>
    // Этот класс создан автоматически классом StronglyTypedResourceBuilder
    // с помощью такого средства, как ResGen или Visual Studio.
    // Чтобы добавить или удалить член, измените файл .ResX и снова запустите ResGen
    // с параметром /str или перестройте свой проект VS.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "16.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    public class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Возвращает кэшированный экземпляр ResourceManager, использованный этим классом.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("SIGame.ViewModel.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Перезаписывает свойство CurrentUICulture текущего потока для всех
        ///   обращений к ресурсу с помощью этого класса ресурса со строгой типизацией.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Версия.
        /// </summary>
        public static string About_Version {
            get {
                return ResourceManager.GetString("About_Version", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Участник с таким именем уже существует!.
        /// </summary>
        public static string AlreadyExists {
            get {
                return ResourceManager.GetString("AlreadyExists", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Любой.
        /// </summary>
        public static string Any {
            get {
                return ResourceManager.GetString("Any", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на SIGame.
        /// </summary>
        public static string App_Name {
            get {
                return ResourceManager.GetString("App_Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Данный пакет не может быть использован для игры на сервере!.
        /// </summary>
        public static string BadPackage {
            get {
                return ResourceManager.GetString("BadPackage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Необходимо задать дату рождения!.
        /// </summary>
        public static string BirthDateRequired {
            get {
                return ResourceManager.GetString("BirthDateRequired", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Не удалось определить адрес сервера!.
        /// </summary>
        public static string CannotGetServerAddress {
            get {
                return ResourceManager.GetString("CannotGetServerAddress", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Изменение аккаунта.
        /// </summary>
        public static string ChangeAccount {
            get {
                return ResourceManager.GetString("ChangeAccount", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Ошибка при переходе на сайт для комментирования. Убедитесь, что у вас настроен браузер по умолчанию..
        /// </summary>
        public static string CommentSiteError {
            get {
                return ResourceManager.GetString("CommentSiteError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Компьютерный игрок.
        /// </summary>
        public static string ComputerPlayer {
            get {
                return ResourceManager.GetString("ComputerPlayer", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Создать.
        /// </summary>
        public static string Create {
            get {
                return ResourceManager.GetString("Create", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Не удалось обнаружить созданную игру!.
        /// </summary>
        public static string CreatedGameNotFound {
            get {
                return ResourceManager.GetString("CreatedGameNotFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Создание игры….
        /// </summary>
        public static string Creating {
            get {
                return ResourceManager.GetString("Creating", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Вы действительно хотите удалить участника &apos;{0}&apos;?.
        /// </summary>
        public static string DeleteConfirm {
            get {
                return ResourceManager.GetString("DeleteConfirm", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Не удалось подключиться к серверу при отправке отчёта об игре. Отчёт будет отправлен позднее..
        /// </summary>
        public static string Error_SendingReport {
            get {
                return ResourceManager.GetString("Error_SendingReport", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Не удалось загрузить аватар по адресу.
        /// </summary>
        public static string Error_UploadingAvatar {
            get {
                return ResourceManager.GetString("Error_UploadingAvatar", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Возникла ошибка при переходе на сайт {0}. Убедитесь, что у вас настроен браузер по умолчанию..
        /// </summary>
        public static string ErrorMovingToSite {
            get {
                return ResourceManager.GetString("ErrorMovingToSite", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Экспорт успешно выполнен!.
        /// </summary>
        public static string ExportOk {
            get {
                return ResourceManager.GetString("ExportOk", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на https://vk.com/topic-135725718_34967839.
        /// </summary>
        public static string FeedbackLink {
            get {
                return ResourceManager.GetString("FeedbackLink", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Слишком большой файл!.
        /// </summary>
        public static string FileTooLarge {
            get {
                return ResourceManager.GetString("FileTooLarge", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Сервер завершил игру из-за отключения участников.
        /// </summary>
        public static string GameClosedCauseEverybodyLeft {
            get {
                return ResourceManager.GetString("GameClosedCauseEverybodyLeft", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Истекло ожидание подключения к серверу.
        /// </summary>
        public static string GameConnectionTimeout {
            get {
                return ResourceManager.GetString("GameConnectionTimeout", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Плохой пакет вопросов!.
        /// </summary>
        public static string GameCreationError_BadPackage {
            get {
                return ResourceManager.GetString("GameCreationError_BadPackage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Игра с таким именем уже существует!.
        /// </summary>
        public static string GameCreationError_DuplicateName {
            get {
                return ResourceManager.GetString("GameCreationError_DuplicateName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Ошибка подключения.
        /// </summary>
        public static string GameCreationError_JoinError {
            get {
                return ResourceManager.GetString("GameCreationError_JoinError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Не удалось создать игру на сервере, так как не был обнаружен игровой пакет!.
        /// </summary>
        public static string GameCreationError_NoPackage {
            get {
                return ResourceManager.GetString("GameCreationError_NoPackage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Ваша версия игры устарела. Обновите игру.
        /// </summary>
        public static string GameCreationError_ObsoleteVersion {
            get {
                return ResourceManager.GetString("GameCreationError_ObsoleteVersion", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Не удалось создать игру на сервере из-за ошибки на сервере!.
        /// </summary>
        public static string GameCreationError_ServerError {
            get {
                return ResourceManager.GetString("GameCreationError_ServerError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Производится обслуживание сервера! Пожалуйста, подключитесь через некоторое время. Приносим извинения за доставленные неудобства..
        /// </summary>
        public static string GameCreationError_ServerMaintainance {
            get {
                return ResourceManager.GetString("GameCreationError_ServerMaintainance", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Сервер не готов начать игру.
        /// </summary>
        public static string GameCreationError_ServerNotReady {
            get {
                return ResourceManager.GetString("GameCreationError_ServerNotReady", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Превышено максимальное количество запущенных игр на сервере! Пожалуйста, подождите..
        /// </summary>
        public static string GameCreationError_TooManyGames {
            get {
                return ResourceManager.GetString("GameCreationError_TooManyGames", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Не удалось создать игру по неизвестной причине!.
        /// </summary>
        public static string GameCreationError_UnknownReason {
            get {
                return ResourceManager.GetString("GameCreationError_UnknownReason", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Неверные настройки игры.
        /// </summary>
        public static string GameCreationError_WrongSettings {
            get {
                return ResourceManager.GetString("GameCreationError_WrongSettings", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Ошибка игрового движка.
        /// </summary>
        public static string GameEngineError {
            get {
                return ResourceManager.GetString("GameEngineError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Вход в игру….
        /// </summary>
        public static string GameEntering {
            get {
                return ResourceManager.GetString("GameEntering", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Вопросы задаются по очереди.
        /// </summary>
        public static string GameModes_Sport_Hint {
            get {
                return ResourceManager.GetString("GameModes_Sport_Hint", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Выбор вопросов из таблицы, спецвопросы и финал.
        /// </summary>
        public static string GameModes_Tv_Hint {
            get {
                return ResourceManager.GetString("GameModes_Tv_Hint", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Необходимо задать название игры.
        /// </summary>
        public static string GameNameRequired {
            get {
                return ResourceManager.GetString("GameNameRequired", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на право на ошибку.
        /// </summary>
        public static string GameRule_IgnoreWrong {
            get {
                return ResourceManager.GetString("GameRule_IgnoreWrong", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на без фальстартов.
        /// </summary>
        public static string GameRule_NoFalseStart {
            get {
                return ResourceManager.GetString("GameRule_NoFalseStart", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на устная.
        /// </summary>
        public static string GameRule_Oral {
            get {
                return ResourceManager.GetString("GameRule_Oral", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на спортивная.
        /// </summary>
        public static string GameRule_Sport {
            get {
                return ResourceManager.GetString("GameRule_Sport", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Все.
        /// </summary>
        public static string GamesFilter_All {
            get {
                return ResourceManager.GetString("GamesFilter_All", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Новые.
        /// </summary>
        public static string GamesFilter_New {
            get {
                return ResourceManager.GetString("GamesFilter_New", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Без пароля.
        /// </summary>
        public static string GamesFilter_NoPassword {
            get {
                return ResourceManager.GetString("GamesFilter_NoPassword", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Упрощённые.
        /// </summary>
        public static string GamesFilter_Sport {
            get {
                return ResourceManager.GetString("GamesFilter_Sport", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Классические.
        /// </summary>
        public static string GamesFilter_Tv {
            get {
                return ResourceManager.GetString("GamesFilter_Tv", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Создана.
        /// </summary>
        public static string GameStage_Created {
            get {
                return ResourceManager.GetString("GameStage_Created", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Финал.
        /// </summary>
        public static string GameStage_Final {
            get {
                return ResourceManager.GetString("GameStage_Final", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Игра окончена.
        /// </summary>
        public static string GameStage_Finished {
            get {
                return ResourceManager.GetString("GameStage_Finished", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Раунд.
        /// </summary>
        public static string GameStage_Round {
            get {
                return ResourceManager.GetString("GameStage_Round", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Начата.
        /// </summary>
        public static string GameStage_Started {
            get {
                return ResourceManager.GetString("GameStage_Started", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на https://vk.com/si_game.
        /// </summary>
        public static string GroupLink {
            get {
                return ResourceManager.GetString("GroupLink", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Импорт успешно выполнен!.
        /// </summary>
        public static string ImportOk {
            get {
                return ResourceManager.GetString("ImportOk", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на {0} встречается как минимум дважды!.
        /// </summary>
        public static string IsDouble {
            get {
                return ResourceManager.GetString("IsDouble", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Ошибка при переходе по ссылке. Убедитесь, что у вас настроен браузер по умолчанию..
        /// </summary>
        public static string LinkError {
            get {
                return ResourceManager.GetString("LinkError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на На сервере запрещено использование такого логина!.
        /// </summary>
        public static string LoginForbidden {
            get {
                return ResourceManager.GetString("LoginForbidden", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Не удалось перенести логи.
        /// </summary>
        public static string LogsMovingError {
            get {
                return ResourceManager.GetString("LogsMovingError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Соединение с сервером разорвано!.
        /// </summary>
        public static string LostConnection {
            get {
                return ResourceManager.GetString("LostConnection", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Об игре.
        /// </summary>
        public static string MainMenu_About {
            get {
                return ResourceManager.GetString("MainMenu_About", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Лучшие игроки.
        /// </summary>
        public static string MainMenu_BestPlayers {
            get {
                return ResourceManager.GetString("MainMenu_BestPlayers", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Выход.
        /// </summary>
        public static string MainMenu_Exit {
            get {
                return ResourceManager.GetString("MainMenu_Exit", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Игра по сети.
        /// </summary>
        public static string MainMenu_NetworkGame {
            get {
                return ResourceManager.GetString("MainMenu_NetworkGame", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Игра онлайн.
        /// </summary>
        public static string MainMenu_OnlineGame {
            get {
                return ResourceManager.GetString("MainMenu_OnlineGame", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Одиночная игра.
        /// </summary>
        public static string MainMenu_SingleGame {
            get {
                return ResourceManager.GetString("MainMenu_SingleGame", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Разные.
        /// </summary>
        public static string Mixed {
            get {
                return ResourceManager.GetString("Mixed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Необходимо указать имя участника!.
        /// </summary>
        public static string NameRequired {
            get {
                return ResourceManager.GetString("NameRequired", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Новый.
        /// </summary>
        public static string New {
            get {
                return ResourceManager.GetString("New", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Новый аккаунт.
        /// </summary>
        public static string NewAccount {
            get {
                return ResourceManager.GetString("NewAccount", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Новая игра.
        /// </summary>
        public static string NewGame {
            get {
                return ResourceManager.GetString("NewGame", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Новый компьютерный игрок.
        /// </summary>
        public static string NewPlayer {
            get {
                return ResourceManager.GetString("NewPlayer", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Новости.
        /// </summary>
        public static string News {
            get {
                return ResourceManager.GetString("News", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Новый ведущий.
        /// </summary>
        public static string NewShowman {
            get {
                return ResourceManager.GetString("NewShowman", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Следующий.
        /// </summary>
        public static string Next {
            get {
                return ResourceManager.GetString("Next", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Папка лицензий не существует!.
        /// </summary>
        public static string NoLicensesFolder {
            get {
                return ResourceManager.GetString("NoLicensesFolder", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Папка логов не существует!.
        /// </summary>
        public static string NoLogsFolder {
            get {
                return ResourceManager.GetString("NoLogsFolder", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Ваша версия игры устарела. Необходимо обновить её.
        /// </summary>
        public static string ObsoleClient {
            get {
                return ResourceManager.GetString("ObsoleClient", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Попробуйте отключить брандмауэр или файервол. Возможно, дело в VPN или прокси-сервере.
        /// </summary>
        public static string Online_Login_Hint {
            get {
                return ResourceManager.GetString("Online_Login_Hint", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Адрес игры.
        /// </summary>
        public static string OnlineGameAddress {
            get {
                return ResourceManager.GetString("OnlineGameAddress", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Пользователь с таким именем уже вошёл на сервер!.
        /// </summary>
        public static string OnlineUserConflict {
            get {
                return ResourceManager.GetString("OnlineUserConflict", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Ошибка при открытии папки лицензий: {0}.
        /// </summary>
        public static string OpenLicensesError {
            get {
                return ResourceManager.GetString("OpenLicensesError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Ошибка при открытии папки логов: {0}.
        /// </summary>
        public static string OpenLogsError {
            get {
                return ResourceManager.GetString("OpenLogsError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Проверка пакета….
        /// </summary>
        public static string PackageCheck {
            get {
                return ResourceManager.GetString("PackageCheck", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на пакет не выбран.
        /// </summary>
        public static string PackageNotSelected {
            get {
                return ResourceManager.GetString("PackageNotSelected", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Вы действительно хотите удалить компьютерного игрока {0}?.
        /// </summary>
        public static string PlayerDeleteConfirm {
            get {
                return ResourceManager.GetString("PlayerDeleteConfirm", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Такой игрок уже есть!.
        /// </summary>
        public static string PlayerExists {
            get {
                return ResourceManager.GetString("PlayerExists", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Игроку необходимо задать имя!.
        /// </summary>
        public static string PlayerNameRequired {
            get {
                return ResourceManager.GetString("PlayerNameRequired", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Мультимедиа-порт {0} уже занят (возможно, одна игра уже запущена?). Попробуйте задать другой порт в настройках.
        /// </summary>
        public static string PortIsUsedError {
            get {
                return ResourceManager.GetString("PortIsUsedError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Необходимо задать номер порта.
        /// </summary>
        public static string PortNumberRequired {
            get {
                return ResourceManager.GetString("PortNumberRequired", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Подготовка….
        /// </summary>
        public static string Preparing {
            get {
                return ResourceManager.GetString("Preparing", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Случайный набор тем сервера.
        /// </summary>
        public static string RandomServerThemes {
            get {
                return ResourceManager.GetString("RandomServerThemes", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Случайный набор тем.
        /// </summary>
        public static string RandomThemes {
            get {
                return ResourceManager.GetString("RandomThemes", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Соединение восстановлено..
        /// </summary>
        public static string ReconnectedMessage {
            get {
                return ResourceManager.GetString("ReconnectedMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Разрыв соединения, переподключаемся....
        /// </summary>
        public static string ReconnectingMessage {
            get {
                return ResourceManager.GetString("ReconnectingMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Соединение было установлено, но внезапно разорвалось!.
        /// </summary>
        public static string RejoinError {
            get {
                return ResourceManager.GetString("RejoinError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на {0}-й раунд.
        /// </summary>
        public static string RoundTrailing {
            get {
                return ResourceManager.GetString("RoundTrailing", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Сохранить.
        /// </summary>
        public static string Save {
            get {
                return ResourceManager.GetString("Save", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Отправка пакета на сервер….
        /// </summary>
        public static string SendingPackageToServer {
            get {
                return ResourceManager.GetString("SendingPackageToServer", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Соединение с сервером потеряно!.
        /// </summary>
        public static string ServerConnectionError {
            get {
                return ResourceManager.GetString("ServerConnectionError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Настройки возвращены к значениям по умолчанию!.
        /// </summary>
        public static string SettingsReset {
            get {
                return ResourceManager.GetString("SettingsReset", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Ведущему необходимо задать имя!.
        /// </summary>
        public static string ShomanNameRequired {
            get {
                return ResourceManager.GetString("ShomanNameRequired", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Вы действительно хотите удалить ведущего {0}?.
        /// </summary>
        public static string ShowmanDeleteConfirm {
            get {
                return ResourceManager.GetString("ShowmanDeleteConfirm", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Библиотека вопросов.
        /// </summary>
        public static string SIStorage {
            get {
                return ResourceManager.GetString("SIStorage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Ошибка обращения к Библиотеке.
        /// </summary>
        public static string SIStorageCallError {
            get {
                return ResourceManager.GetString("SIStorageCallError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Ошибка работы с Библиотекой вопросов.
        /// </summary>
        public static string SIStorageError {
            get {
                return ResourceManager.GetString("SIStorageError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Возникла ошибка при переходе на сайт ({0}). Убедитесь, что у вас настроен браузер по умолчанию..
        /// </summary>
        public static string SiteNavigationError {
            get {
                return ResourceManager.GetString("SiteNavigationError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на https://vk.com/topic-135725718_34975471.
        /// </summary>
        public static string ThemesLink {
            get {
                return ResourceManager.GetString("ThemesLink", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Время на выбор темы в финальном раунде.
        /// </summary>
        public static string TimeSettings_ChoosingFinalTheme {
            get {
                return ResourceManager.GetString("TimeSettings_ChoosingFinalTheme", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Время для выбора игроком вопроса.
        /// </summary>
        public static string TimeSettings_ChoosingQuestion {
            get {
                return ResourceManager.GetString("TimeSettings_ChoosingQuestion", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Время на обдумывание в финале.
        /// </summary>
        public static string TimeSettings_FinalThinking {
            get {
                return ResourceManager.GetString("TimeSettings_FinalThinking", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Время на размышление на отдачу Вопроса с секретом.
        /// </summary>
        public static string TimeSettings_GivingCat {
            get {
                return ResourceManager.GetString("TimeSettings_GivingCat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Время на размышление над ставкой на Вопросе со ставкой и финале.
        /// </summary>
        public static string TimeSettings_MakingStake {
            get {
                return ResourceManager.GetString("TimeSettings_MakingStake", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Время на паузу для медиаконтента.
        /// </summary>
        public static string TimeSettings_MediaDelay {
            get {
                return ResourceManager.GetString("TimeSettings_MediaDelay", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Время на ввод ответа после нажатия кнопки.
        /// </summary>
        public static string TimeSettings_PrintingAnswer {
            get {
                return ResourceManager.GetString("TimeSettings_PrintingAnswer", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Время на вывод правильного ответа.
        /// </summary>
        public static string TimeSettings_RightAnswer {
            get {
                return ResourceManager.GetString("TimeSettings_RightAnswer", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Время раунда.
        /// </summary>
        public static string TimeSettings_Round {
            get {
                return ResourceManager.GetString("TimeSettings_Round", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Время на принятие решений ведущим.
        /// </summary>
        public static string TimeSettings_ShowmanDecisions {
            get {
                return ResourceManager.GetString("TimeSettings_ShowmanDecisions", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Время для размышления над вопросом.
        /// </summary>
        public static string TimeSettings_ThinkingOnQuestion {
            get {
                return ResourceManager.GetString("TimeSettings_ThinkingOnQuestion", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Время на размышление над спецвопросом.
        /// </summary>
        public static string TimeSettings_ThinkingOnSpecial {
            get {
                return ResourceManager.GetString("TimeSettings_ThinkingOnSpecial", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Вы создали слишком много игр!.
        /// </summary>
        public static string TooManyGames {
            get {
                return ResourceManager.GetString("TooManyGames", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Обнаружено обновление программы до версии {0}.
        /// </summary>
        public static string UpdateVersionMessage {
            get {
                return ResourceManager.GetString("UpdateVersionMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Истекло время ожидания отправки пакета. Попробуйте ещё раз или уменьшите размер файла..
        /// </summary>
        public static string UploadPackageTimeout {
            get {
                return ResourceManager.GetString("UploadPackageTimeout", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Возникла ошибка при переходе на сайт ({0}). Убедитесь, что у вас настроен браузер по умолчанию..
        /// </summary>
        public static string VKThemesError {
            get {
                return ResourceManager.GetString("VKThemesError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Неверный формат адреса.
        /// </summary>
        public static string WrongAddressFormat {
            get {
                return ResourceManager.GetString("WrongAddressFormat", resourceCulture);
            }
        }
    }
}
